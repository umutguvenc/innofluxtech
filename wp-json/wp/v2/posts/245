{"id":245,"date":"2019-03-13T11:55:00","date_gmt":"2019-03-13T11:55:00","guid":{"rendered":"https:\/\/v2.saal.ai\/?p=245"},"modified":"2023-02-20T14:19:57","modified_gmt":"2023-02-20T14:19:57","slug":"natural-language-spell-checkers","status":"publish","type":"post","link":"https:\/\/www.saal.ai\/natural-language-spell-checkers\/","title":{"rendered":"Natural language spell checkers"},"content":{"rendered":"\n<p>Dialogues are a crucial part of Natural Language Understanding. Dialogues involve an exchange of Intents between system hence emphasis on words becomes paramount. Techniques like Knowledge Graphs, Machine Learning, and AI provide the much-needed sophistication in enabling systems to understand words. In the same way, more straightforward methods like checking the word for the spelling also allows systems to disambiguate the meaning of words. For example, when the user enters the non-existent word \u201cXbject\u201d in the English language, an intelligent system will try to disambiguate by suggesting words like \u201cObject\u201d or \u201cAbject,\u201d etc. Once disambiguated, the words will form the actual intent that the system can process. Hence spell checkers are one of the fundamental components in Natural Language Understanding. However, spell checkers are definitely not the new kids in Text Ville.<\/p>\n\n\n\n<p>Spell Checkers have been around since the early evolution of operating systems and word processing applications. Ralph Gorrin\u2019s SPELL program written in assembly language in 1971 at Stanford Artificial Intelligence Laboratory inspired the C++ based Ispell which was the spell checker of Western Languages for Unix Operating Systems. Its integration helped the evolution of Emacs editor. Ispell had a simpler and less complex approach for word suggestions as it was based upon Damaerau-Levenshtein Distance of 1. Damaerau-Levenshtein Distance is an editing technique that measures the number of character changes needed to transform one word into another. Later, GNU Aspell came in as a replacement of Ispell which not only was able to guess more distant Damaerau-Levenshtein Distance words but also took into consideration language pronunciation rules and also had support for UTF8 inbuilt. GNU Aspell was mostly oriented towards GNU type of operating systems and had integration with Vim editor.<\/p>\n\n\n\n<p>On the Word Processor Applications front, open source companies OpenOffice.org started maturing their own spell checker known as Myspell. Like GNU Aspell, Myspell is also a replacement for Ispell. In Myspell, every locale of the language can have files for spelling, hyphenation, and thesaurus.<\/p>\n\n\n\n<p>Spell checking is based on 2 files .aff and .dic. The .dic file refers to a list of words or simply the dictionary whereas .aff file refers to affixes. Affixes are the characters which are associated with Stem words to form a new word or word form. Later, Hunspell spell checker originally developed for the Hungarian language, which was a replacement for Myspell and Aspell, used N-Gram similarity and Rules on top of .dic and .aff files data for suggestions. Hence Hunspell is currently the most widely used spell checker used by the likes of OpenOffice.org, Libre Office, Mozilla Firefox and Thunderbird, Google Chrome, Mac and other Linux operating systems<\/p>\n\n\n\n<p>Like other spell checkers, Hunspell is also Open Source and is initially written in C++ with forks available in other programming languages, and the library is available at&nbsp;<a href=\"http:\/\/hunspell.github.io\/\" target=\"_blank\" rel=\"noreferrer noopener\">http:\/\/hunspell.github.io\/<\/a>.<\/p>\n\n\n\n<p>Various dictionaries that Hunspell supports are available at Libre Office link.<br><a href=\"https:\/\/cgit.freedesktop.org\/libreoffice\/dictionaries\/tree\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/cgit.freedesktop.org\/<wbr>libreoffice\/dictionaries\/tree\/<\/a><\/p>\n\n\n\n<p>For Java Projects, Hunspell can be integrated using Maven Dependency as follows.<br><br>com.atlascopcogroupId&gt;<br>hunspell-bridjartifactId&gt;<br>1.0.4<\/p>\n\n\n\n<p>A sample program for Hunspell Checker is as follows.<\/p>\n\n\n\n<p>public class HunspellChecker {<br>public static void main(String[] args) {<br>ClassLoader classLoader = HunspellChecker.class.getClassLoader();<br>URL dictionary = classLoader.getResource(\u201cen_US\/en_US.dic\u201d);<br>URL affix = classLoader.getResource(\u201cen_US\/en_US.aff\u201d);<br>Hunspell hunspell = new Hunspell(dictionary.getPath(), affix.getPath());<br>hunspell.suggest(\u201cXabject\u201d).forEach(System.out::println);<br>}<br>}<\/p>\n\n\n\n<p>As seen, Hunspell can work with various Dictionaries. In this example, en_US.dic is the US English Dictionary, and en_US.aff are the Affixes. When the user enters \u201cXabject,\u201d Hunspell Checker gives output as follows<\/p>\n\n\n\n<p>Abject<br>X abject<br>Object<br>Ejecta<br>Eject<br>Subject<br>Subjugate<\/p>\n\n\n\n<p>The open source programming language R popular with statisticians has a package dedicated to hunspell where the hunspell_check and hunspell_suggest functions can test individual words for correctness, and suggest similar (correct) words that look similar to the given (incorrect) word. More information can be obtained here:&nbsp;<a href=\"https:\/\/cran.r-project.org\/web\/packages\/hunspell\/vignettes\/intro.html\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/cran.r-project.org\/<wbr>web\/packages\/hunspell\/<wbr>vignettes\/intro.html<\/a><\/p>\n\n\n\n<p>The python implementation is available here :<br><a href=\"https:\/\/datascience.blog.wzb.eu\/2016\/07\/13\/autocorrecting-misspelled-words-in-python-using-hunspell\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/datascience.blog.wzb.<wbr>eu\/2016\/07\/13\/autocorrecting-<wbr>misspelled-words-in-python-<wbr>using-hunspell\/<\/a>.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Dialogues are a crucial part of Natural Language Understanding. Dialogues involve an exchange of Intents between system hence emphasis on words becomes paramount. Techniques like Knowledge Graphs, Machine Learning, and AI provide the much-needed sophistication in enabling systems to understand words. In the same way, more straightforward methods like checking the word for the spelling [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":246,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[6],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.3 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Natural language spell checkers - SAAL<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.saal.ai\/natural-language-spell-checkers\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Natural language spell checkers - SAAL\" \/>\n<meta property=\"og:description\" content=\"Dialogues are a crucial part of Natural Language Understanding. Dialogues involve an exchange of Intents between system hence emphasis on words becomes paramount. Techniques like Knowledge Graphs, Machine Learning, and AI provide the much-needed sophistication in enabling systems to understand words. In the same way, more straightforward methods like checking the word for the spelling [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.saal.ai\/natural-language-spell-checkers\/\" \/>\n<meta property=\"og:site_name\" content=\"SAAL\" \/>\n<meta property=\"article:published_time\" content=\"2019-03-13T11:55:00+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2023-02-20T14:19:57+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.saal.ai\/wp-content\/uploads\/2022\/10\/459-SAAL-NATURAL-LANGUAGE-SPELL-CHECKERS.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1400\" \/>\n\t<meta property=\"og:image:height\" content=\"365\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"author\" content=\"saaladmin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"saaladmin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.saal.ai\/natural-language-spell-checkers\/\",\"url\":\"https:\/\/www.saal.ai\/natural-language-spell-checkers\/\",\"name\":\"Natural language spell checkers - SAAL\",\"isPartOf\":{\"@id\":\"http:\/\/172.26.15.137\/#website\"},\"datePublished\":\"2019-03-13T11:55:00+00:00\",\"dateModified\":\"2023-02-20T14:19:57+00:00\",\"author\":{\"@id\":\"http:\/\/172.26.15.137\/#\/schema\/person\/85c9e52079e8d125d255f07fc371776f\"},\"breadcrumb\":{\"@id\":\"https:\/\/www.saal.ai\/natural-language-spell-checkers\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.saal.ai\/natural-language-spell-checkers\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.saal.ai\/natural-language-spell-checkers\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/saal.ai\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Natural language spell checkers\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/172.26.15.137\/#website\",\"url\":\"http:\/\/172.26.15.137\/\",\"name\":\"SAAL\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/172.26.15.137\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"http:\/\/172.26.15.137\/#\/schema\/person\/85c9e52079e8d125d255f07fc371776f\",\"name\":\"saaladmin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"http:\/\/172.26.15.137\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/ad5a0a4b8302cd956915fb1f08aa384d?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/ad5a0a4b8302cd956915fb1f08aa384d?s=96&d=mm&r=g\",\"caption\":\"saaladmin\"},\"sameAs\":[\"https:\/\/v2.saal.ai\"],\"url\":\"https:\/\/www.saal.ai\/author\/saaladmin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Natural language spell checkers - SAAL","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.saal.ai\/natural-language-spell-checkers\/","og_locale":"en_US","og_type":"article","og_title":"Natural language spell checkers - SAAL","og_description":"Dialogues are a crucial part of Natural Language Understanding. Dialogues involve an exchange of Intents between system hence emphasis on words becomes paramount. Techniques like Knowledge Graphs, Machine Learning, and AI provide the much-needed sophistication in enabling systems to understand words. In the same way, more straightforward methods like checking the word for the spelling [&hellip;]","og_url":"https:\/\/www.saal.ai\/natural-language-spell-checkers\/","og_site_name":"SAAL","article_published_time":"2019-03-13T11:55:00+00:00","article_modified_time":"2023-02-20T14:19:57+00:00","og_image":[{"width":1400,"height":365,"url":"https:\/\/www.saal.ai\/wp-content\/uploads\/2022\/10\/459-SAAL-NATURAL-LANGUAGE-SPELL-CHECKERS.png","type":"image\/png"}],"author":"saaladmin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"saaladmin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.saal.ai\/natural-language-spell-checkers\/","url":"https:\/\/www.saal.ai\/natural-language-spell-checkers\/","name":"Natural language spell checkers - SAAL","isPartOf":{"@id":"http:\/\/172.26.15.137\/#website"},"datePublished":"2019-03-13T11:55:00+00:00","dateModified":"2023-02-20T14:19:57+00:00","author":{"@id":"http:\/\/172.26.15.137\/#\/schema\/person\/85c9e52079e8d125d255f07fc371776f"},"breadcrumb":{"@id":"https:\/\/www.saal.ai\/natural-language-spell-checkers\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.saal.ai\/natural-language-spell-checkers\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.saal.ai\/natural-language-spell-checkers\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/saal.ai\/"},{"@type":"ListItem","position":2,"name":"Natural language spell checkers"}]},{"@type":"WebSite","@id":"http:\/\/172.26.15.137\/#website","url":"http:\/\/172.26.15.137\/","name":"SAAL","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/172.26.15.137\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"http:\/\/172.26.15.137\/#\/schema\/person\/85c9e52079e8d125d255f07fc371776f","name":"saaladmin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"http:\/\/172.26.15.137\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/ad5a0a4b8302cd956915fb1f08aa384d?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/ad5a0a4b8302cd956915fb1f08aa384d?s=96&d=mm&r=g","caption":"saaladmin"},"sameAs":["https:\/\/v2.saal.ai"],"url":"https:\/\/www.saal.ai\/author\/saaladmin\/"}]}},"_links":{"self":[{"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/posts\/245"}],"collection":[{"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/comments?post=245"}],"version-history":[{"count":3,"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/posts\/245\/revisions"}],"predecessor-version":[{"id":1570,"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/posts\/245\/revisions\/1570"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/media\/246"}],"wp:attachment":[{"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/media?parent=245"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/categories?post=245"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.saal.ai\/wp-json\/wp\/v2\/tags?post=245"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}